from PIL import Image
import os

class ImageEncryptor:
    """
    Class to handle image encryption and decryption using XOR pixel manipulation.
    """

    def __init__(self, key: int):
        if not (0 <= key <= 255):
            raise ValueError("Key must be between 0 and 255.")
        self.key = key

    def encrypt_decrypt(self, input_path: str, output_path: str):
        """
        Encrypt or decrypt the image (XOR operation is symmetric).

        Parameters:
            input_path (str): Path to the input image.
            output_path (str): Path to save the output image.
        """
        try:
            img = Image.open(input_path).convert("RGB")
        except Exception as e:
            print(f"Error opening image: {e}")
            return

        pixels = img.load()

        for x in range(img.width):
            for y in range(img.height):
                r, g, b = pixels[x, y]
                r_new = r ^ self.key
                g_new = g ^ self.key
                b_new = b ^ self.key
                pixels[x, y] = (r_new, g_new, b_new)

        img.save(output_path)
        print(f"Output image saved as: {output_path}")

def get_valid_integer(prompt: str, min_val: int = 0, max_val: int = 255) -> int:
    """
    Prompt user for a valid integer input within a specified range.
    """
    while True:
        try:
            value = int(input(prompt))
            if min_val <= value <= max_val:
                return value
            else:
                print(f"Please enter an integer between {min_val} and {max_val}.")
        except ValueError:
            print("Invalid input. Please enter a valid integer.")

def main():
    """
    Main function to handle user interaction.
    """
    print("=== Image Encryption & Decryption Tool (XOR-based) ===\n")

    while True:
        print("\nMenu:")
        print("1. Encrypt Image")
        print("2. Decrypt Image")
        print("3. Exit")

        choice = input("Select an option (1/2/3): ").strip()

        if choice == '3':
            print("Exiting program.")
            break

        if choice not in ('1', '2'):
            print("Invalid choice. Please select 1, 2, or 3.")
            continue

        input_path = input("Enter the input image path: ").strip()

        if not os.path.isfile(input_path):
            print("File not found. Please check the path.")
            continue

        output_path = input("Enter the output image path: ").strip()

        key = get_valid_integer("Enter encryption key (0-255): ")

        cipher = ImageEncryptor(key)
        cipher.encrypt_decrypt(input_path, output_path)

if __name__ == "__main__":
    main()
